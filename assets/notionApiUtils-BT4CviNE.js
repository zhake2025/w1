import{c as y,dn as c,dp as m,t as i}from"./index-5OteHtpV.js";import{T as h}from"./index-BFM3Spdl.js";/**
 * @license lucide-react v0.511.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const w=[["path",{d:"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4",key:"g0fldk"}],["path",{d:"m21 2-9.6 9.6",key:"1j0ho8"}],["circle",{cx:"7.5",cy:"15.5",r:"5.5",key:"yqb3hr"}]],g=y("key",w),p=t=>c.isNativePlatform()?`https://api.notion.com${t}`:`${window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"?"/api/notion":"https://api.notion.com"}${t}`,l=t=>{if(t!=null){if(typeof t=="string")return t;if(typeof t=="object"&&t.constructor===Object)try{return JSON.stringify(t)}catch(e){throw console.warn("[Notion API] JSON序列化失败:",e),new Error(`Failed to serialize request data: ${e}`)}if(Array.isArray(t))try{return JSON.stringify(t)}catch(e){throw console.warn("[Notion API] JSON序列化失败:",e),new Error(`Failed to serialize request data: ${e}`)}try{return String(t)}catch(e){throw console.warn("[Notion API] 数据序列化失败:",e),new Error("Unable to serialize request data")}}},N=async(t,e)=>{const o=p(t),a={Authorization:`Bearer ${e.apiKey}`,"Notion-Version":"2022-06-28","Content-Type":"application/json"};if(c.isNativePlatform()){console.log("[Notion API] 移动端使用 CorsBypass 插件:",o);try{const s=await m.request({url:o,method:e.method,headers:a,data:l(e.body),timeout:3e4,responseType:"json"});if(s.status<200||s.status>=300){const u=typeof s.data=="object"?s.data:{};throw new n(u.message||`HTTP ${s.status}: ${s.statusText}`,s.status,u.code)}return s.data}catch(s){throw console.error("[Notion API] CorsBypass 请求失败:",s),s?.message?.includes("timeout")||s?.message?.includes("network")?new n("网络连接超时，请检查网络设置",0,"NETWORK_ERROR"):s}}const r=await fetch(o,{method:e.method,headers:a,body:l(e.body)});if(!r.ok){const s=await r.json().catch(()=>({}));throw new n(s.message||`HTTP ${r.status}: ${r.statusText}`,r.status,s.code)}return r.json()};class n extends Error{constructor(e,o,a){super(e),this.status=o,this.code=a,this.name="NotionApiError"}getUserFriendlyMessage(){switch(this.status){case 0:return"网络连接失败，请检查网络设置";case 401:return"API密钥无效，请检查配置";case 404:return"数据库不存在，请检查数据库ID";case 403:return"权限不足，请确保集成已连接到数据库";case 429:return"请求过于频繁，请稍后重试";case 500:return"Notion服务器错误，请稍后重试";default:return this.message||"未知错误"}}}const A=async(t,e)=>{c.isNativePlatform()?await h.show({text:t,duration:"long",position:"bottom"}):i&&i.success(t)},b=async t=>{const e=t instanceof n?t.getUserFriendlyMessage():t.message;c.isNativePlatform()?await h.show({text:`导出失败: ${e}`,duration:"long",position:"bottom"}):i&&i.error(`导出失败: ${e}`)};export{g as K,n as N,b as a,N as n,A as s};
